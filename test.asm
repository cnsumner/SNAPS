var n 1000
var newn 0
var zero 0
var i 0
var j 0
var temp1 0
var temp2 0
var arg1 0
var arg2 0

array nums1 81 66 17 -24 51 -87 -99 -52 95 -12 62 77 -57 84 2 40 95 100 86 8 -92 -17 52 51 -99 -73 53 78 18 69 45 -100 -36 24 -39 -75 -43 -65 55 90 2 17 85 -8 10 22 54 -86 63 58 5 50 -15 -53 25 60 69 -49 48 91 -13 40 -32 -68 -93 -57 8 -48 -94 81 82 -60 11 67 -87 -16 39 -54 -12 -53 -43 -93 87 -94 44 -14 -91 -67 -30 -21 -17 -57 72 -47 71 -40 -35 -62 -99 35 72 34 -59 -71 -99 -22 -81 57 -20 55 -59 -18 30 -33 -93 40 28 54 -77 -71 -32 -66 77 -72 -99 -97 9 94 -10 21 -32 30 -71 85 -18 94 18 73 36 63 6 -86 -37 68 -29 96 -26 -25 61 -70 -18 8 -42 -15 23 -9 -53 80 18 -33 -83 -23 -57 21 -25 -83 -13 -18 -80 -64 60 -84 61 -96 -74 -68 -79 -13 30 0 62 54 -26 -16 6 100 23 -79 -29 95 -54 27 36 69 16 -38 -63 97 -75 -79 79 53 13 -62 52 58 24 -23 -91 67 46 89 83 63 -97 -29 79 -75 34 81 -33 44 -71 84 -16 60 32 -10 -82 -35 85 -60 -80 89 -26 70 50 -56 9 24 -3 -95 -95 -59 6 -68 52 56 -38 89 10 -72 70 42 5 12 72 30 9 21 19 -54 -93 36 8 -12 22 56 -25 -5 -41 -41 -98 51 48 53 93 23 2 -99 -61 -38 9 -48 -35 24 81 50 2 -76 44 61 34 76 -92 70 47 -41 -18 -54 -11 88 36 27 71 71 13 -11 89 -85 -47 54 98 60 29 83 -87 27 -43 92 73 -57 34 -71 -6 20 -41 -17 -89 -80 -80 -24 81 88 -3 71 16 76 -60 64 26 -35 -57 -67 -11 -82 -50 -62 30 -11 20 -25 36 -84 -82 -25 63 65 -90 -78 -93 56 -75 -94 50 59 80 32 -45 -99 -29 69 65 -37 7 36 50 -92 30 -51 -15 -70 -75 -74 -3 49 96 87 -5 55 88 -74 -68 94 -38 -73 -24 35 30 16 21 83 -83 -28 63 -83 -28 -1 -65 -44 36 -86 -60 -84 -90 -95 58 6 -46 -69 14 -20 5 -62 -28 1 71 40 67 85 59 -83 6 49 -69 -49 71 100 -51 86 -26 -6 25 48 -7 25 -18 -35 -22 89 -73 43 -97 -86 58 -81 78 -24 75 -88 40 -15 -89 62 97 83 68 69 -21 -83 3 99 60 -58 33 13 -82 14 6 45 -76 15 -82 -85 20 -97 76 69 -74 -84 -63 15 11 53 -75 44 5 -25 -25 85 -33 46 42 94 -98 -3 -48 20 68 66 87 -4 -99 28 82 -9 -71 25 -20 25 17 88 -86 -9 23 24 -33 43 -31 -30 -50 -61 -94 -12 -95 18 -58 -85 24 70 75 -17 7 78 89 -99 -43 -89 -27 47 -69 -5 52 77 98 58 -30 75 -73 93 48 66 -95 -56 94 -16 71 20 -92 64 23 33 -63 14 -76 -38 44 -60 22 -33 -90 -97 83 -14 -74 40 -91 50 -85 35 96 29 -91 -100 58 30 58 3 -34 56 -8 87 70 -24 -79 -19 -26 -4 61 -3 -31 49 -18 -82 -18 -16 -33 36 -42 42 -97 -60 -37 -33 -17 -7 5 -51 -61 -100 -32 97 75 17 50 -50 92 16 -54 -100 49 -75 43 -50 68 42 7 47 -84 65 17 93 95 64 -32 41 17 -47 39 89 99 35 -59 17 4 15 16 70 -50 14 -15 -46 -63 -28 56 -47 -22 -59 -86 25 -21 -35 -71 27 95 59 -82 29 36 71 35 13 31 -68 38 62 -24 25 42 -35 -18 49 -20 -86 -46 -86 -83 6 -77 -7 56 -4 66 46 -47 7 -2 23 -72 -17 -98 26 15 60 98 39 36 -5 -61 27 -29 49 62 36 -90 65 60 -31 74 94 22 88 -94 -26 -96 9 68 -57 54 -78 -27 -48 -81 7 65 -96 -94 46 -54 -97 -30 6 -83 -27 -3 -35 -38 -56 84 0 5 -90 -48 38 83 40 54 77 40 -28 73 -53 -44 -59 -55 -97 -81 1 -74 -55 -16 63 26 -15 30 47 -66 -16 1 -57 -47 -68 86 77 -1 -79 35 57 60 -52 -11 -39 98 -97 -22 58 41 -34 77 62 33 44 71 -75 26 42 -79 -58 -50 -78 -55 -22 100 -88 -25 89 -55 -15 -24 -38 -83 14 -46 -48 38 -6 -81 -89 -44 -96 -37 12 -64 43 48 8 -1 60 5 -2 -91 99 77 -70 -63 69 98 -26 -81 56 -77 50 -95 66 -39 -57 55 80 -38 -61 -69 -14 36 -41 -44 68 -9 -41 -82 -84 19 24 57 -43 44 0 -27 40 0 88 37 -83 48 -37 7 96 -76 10 44 44 -28 -27 55 -95 6 -19 -87 -4 95 -49 10 -1 50 -27 -63 31 -77 -17 84 50 -23 91 56 -45 -87 -68 69 -76 -90 9 -23 -34 -79 0 58 -92 -13 -74 57 90 16 65 -49 -97 -91 -16 -19 79 59 -1 -65 69 -14 44 84 16 -39 89 -39 -57 17 0 -21 2 5 53 11 -62 25 56 99 57 77 80 -54 59 -99 4 44 -76 12 -19 -75 100 -1 99 56 23 -50 30

swap:
LOADI arg1
STORE temp1
LOADI arg2
STOREI arg1
LOAD temp1
STOREI arg2
RET


entry:
loop:
LOAD n 			//while n > 0
BZERO endloop: 	//..
LOAD zero 			//newn = 0
STORE newn 			//..
ADDI 1 				//i = 1
STORE i 			//..

loop2:
LOAD i 				//for i < n
SLT n 				//..
BZERO endloop2: 	//..

LOAD i 					//if data[i-1] > data[i]
ADDI nums1 				//..
STORE arg2 				//.. (arg2 = data address + offset i)
LOADI arg2 				//.. (load data[i])
STORE temp1 			//.. (store data[i] in temp1)
LOAD arg2 				//..
ADDI -1 				//..
STORE arg1 				//.. (arg1 = arg2 - 1)
LOADI arg1 				//.. (load data[i-1])
SGT temp1 				//..
BZERO ifnot: 			//..

CALL swap: 					//swap the values
LOAD i 						//newn = i
STORE newn 					//..

ifnot:

LOAD i 				//++i
ADDI 1 				//..
STORE i 			//..
JUMP loop2: 		//
endloop2:

LOAD newn 		//n = newn
STORE n 		//..
JUMP loop: 		//
endloop:
exit